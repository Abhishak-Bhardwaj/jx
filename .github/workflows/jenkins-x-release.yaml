jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: "0"
        token: ${{ secrets.GITHUB_TOKEN }}
    - run: |
        git config user.name jenkins-x-bot-test
        git config user.email jenkins-x@googlegroups.com
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: next-version
      uses: docker://gcr.io/jenkinsxio/jx-release-version:1.0.46
      with:
        args: -c "jx-release-version > VERSION"
        entrypoint: bash
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: jx-variables
      uses: docker://gcr.io/jenkinsxio/jx-boot:3.1.170
      with:
        args: gitops variables
        entrypoint: jx
    - run: |
        source .jx/variables.sh

        if [ -d "charts/$REPO_NAME" ]; then
        sed -i -e "s/^version:.*/version: $VERSION/" ./charts/$REPO_NAME/Chart.yaml
        sed -i -e "s/repository:.*/repository: $DOCKER_REGISTRY\/$DOCKER_REGISTRY_ORG\/$APP_NAME/" ./charts/$REPO_NAME/values.yaml
        sed -i -e "s/tag:.*/tag: $VERSION/" ./charts/$REPO_NAME/values.yaml;
        else echo no charts; fi

    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: chart-docs
      uses: docker://jnorwood/helm-docs:v1.4.0
      with:
        args: -c "if [ -d \"charts/$REPO_NAME\" ]; then cd charts/$REPO_NAME; helm-docs;
          else echo no charts; fi"
        entrypoint: /bin/ash
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: changelog
      uses: docker://gcr.io/jenkinsxio/jx-changelog:0.0.30
      with:
        entrypoint: jx
        args: |
          changelog create --verbose --header-file=hack/changelog-header.md --version=$VERSION --rev=$PULL_BASE_SHA --output-markdown=changelog.md --update-release=false
    - run: |
        source .jx/variables.sh
        git add * || true
        git commit -a -m "chore: release $VERSION" --allow-empty
        git tag -fa v$VERSION -m "Release version $VERSION"
        git push origin v$VERSION

    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: upload-binaries
      uses: docker://goreleaser/goreleaser:v0.155.0
      with:
        entrypoint: bash
        args: |
          source .jx/variables.sh
          export BRANCH=$(git rev-parse --abbrev-ref HEAD)
          export BUILDDATE=$(date)
          export REV=$(git rev-parse HEAD)
          export GOVERSION="1.15"
          export ROOTPACKAGE="github.com/$REPO_OWNER/$REPO_NAME"
          goreleaser release
    - id: prep
      name: Set the values
      run: |
        source .jx/variables.sh
        echo "::set-output name=version::${VERSION}"
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: jenkins-x
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build and push jx-boot
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-boot
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version}}
        tags: |
          ghcr.io/jenkins-x/jx-boot:latest
          ghcr.io/jenkins-x/jx-boot:${{ steps.prep.outputs.version }}
    - name: Build and push jx-cli
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version}}
        tags: |
          ghcr.io/jenkins-x/jx-cli:latest
          ghcr.io/jenkins-x/jx-cli:${{ steps.prep.outputs.version }}
    - name: Build and push jx-go
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-go
        platforms: linux/amd64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version}}
        tags: |
          ghcr.io/jenkins-x/jx-go:latest
          ghcr.io/jenkins-x/jx-go:${{ steps.prep.outputs.version }}
    - name: Build and push jx-go-maven
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-go-maven
        platforms: linux/amd64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version}}
        tags: |
          ghcr.io/jenkins-x/jx-go-maven:latest
          ghcr.io/jenkins-x/jx-go-maven:${{ steps.prep.outputs.version }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-bdd
        platforms: linux/amd64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version}}
        tags: |
          ghcr.io/jenkins-x/jx-bdd:latest
          ghcr.io/jenkins-x/jx-bdd:${{ steps.prep.outputs.version }}
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        JX_REPOSITORY_USERNAME: jenkins-x-bot-test
      name: release-chart
      uses: docker://gcr.io/jenkinsxio/jx-cli:3.1.170
      with:
        entrypoint: sh
        args: |
          echo setting the git user.name
          git config user.name jenkins-x-bot-test
          git config user.email jenkins-x@googlegroups.com
          jx gitops helm release

    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: promote-release
      uses: docker://gcr.io/jenkinsxio/jx-updatebot:0.0.46
      with:
        entrypoint: jx-updatebot
        args: pr
"on":
  push:
    branches:
    - main
    - master
